// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
@use "./app/components/shared/tile/tile-theme.component" as tile;
@use "./app/pages/main-page/main-page-theme.component" as main-page;
@use "./app/components/sidebar/sidebar-theme.component" as sidebar;
// Plus imports for other components in your app.
@import "variables";
// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!

@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/

//Light mode material palettes
$mat-light-primary-palette: mat.define-palette(
    $light-primary-palette, 400, 200, 600, 50
);
$mat-light-green-palette: mat.define-palette(
    $light-green-palette, 400
);
$mat-light-yellow-palette: mat.define-palette(
    $light-yellow-palette, 300
);
$mat-light-orange-palette: mat.define-palette(
    $light-orange-palette, 200
);
$mat-light-red-palette: mat.define-palette(
    $light-red-palette, 300
);
$mat-light-blue-palette: mat.define-palette(
    $light-blue-palette, 300
);
$mat-light-violet-palette: mat.define-palette(
    $light-violet-palette, 300, 100, 400, 50
);
$mat-light-pink-palette: mat.define-palette(
    $light-pink-palette, 300
);

//Dark mode material palettes

$mat-dark-primary-palette: mat.define-palette(
    $dark-primary-palette, 700, 900, 900, 200
);
$mat-dark-green-palette: mat.define-palette(
    $dark-green-palette
);
$mat-dark-yellow-palette: mat.define-palette(
    $dark-yellow-palette
);
$mat-dark-orange-palette: mat.define-palette(
    $dark-orange-palette
);
$mat-dark-red-palette: mat.define-palette(
    $dark-red-palette
);
$mat-dark-blue-palette: mat.define-palette(
    $dark-blue-palette
);
$mat-dark-violet-palette: mat.define-palette(
    $dark-violet-palette, 500, 500, 100, 50
);
$mat-dark-pink-palette: mat.define-palette(
    $dark-pink-palette
);
// The warn palette is optional (defaults to red).
// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$default-theme: mat.define-light-theme((color: (
  primary: $mat-light-primary-palette,
  accent: $mat-light-violet-palette,
  warn: $mat-light-red-palette,
)));


$light-green-theme: mat.define-light-theme(
    (
      color: (
        primary: $mat-light-green-palette,
        accent: $mat-light-primary-palette,
        warn: $mat-light-red-palette
      ),
    )
);
$light-yellow-theme: mat.define-light-theme(
    (
      color: (
        primary: $mat-light-yellow-palette,
        accent: $mat-light-primary-palette,
        warn: $mat-light-red-palette,
      ),
    )
);

$light-orange-theme: mat.define-light-theme(
    (
      color: (
        primary: $mat-light-orange-palette,
        accent: $mat-light-primary-palette,
        warn: $mat-light-red-palette,
      ),
    )
);
$light-red-theme: mat.define-light-theme(
    (
      color: (
        primary: $mat-light-red-palette,
        accent: $mat-light-primary-palette,
      ),
    )
);
$light-blue-theme: mat.define-light-theme(
    (
      color: (
        primary: $mat-light-blue-palette,
        accent: $mat-light-primary-palette,
        warn: $mat-light-red-palette,
      ),
    )
);
$light-violet-theme: mat.define-light-theme(
    (
      color: (
        primary: $mat-light-violet-palette,
        accent: $mat-light-primary-palette,
        warn: $mat-light-red-palette,
      ),
    )
);
$light-pink-theme: mat.define-light-theme(
    (
      color: (
        primary: $mat-light-pink-palette,
        accent: $mat-light-primary-palette,
        warn: $mat-light-red-palette,
      ),
    )
);

$default-dark-theme: mat.define-dark-theme((color: (
  primary: $mat-dark-primary-palette,
  accent: $mat-dark-violet-palette,
  warn: $mat-dark-red-palette,
)));


$dark-green-theme: mat.define-dark-theme(
    (
      color: (
        primary: $mat-dark-green-palette,
        accent: $mat-dark-primary-palette,
        warn: $mat-dark-red-palette
      ),
    )
);
$dark-yellow-theme: mat.define-dark-theme(
    (
      color: (
        primary: $mat-dark-yellow-palette,
        accent: $mat-dark-primary-palette,
        warn: $mat-dark-red-palette,
      ),
    )
);

$dark-orange-theme: mat.define-dark-theme(
    (
      color: (
        primary: $mat-dark-orange-palette,
        accent: $mat-dark-primary-palette,
        warn: $mat-dark-red-palette,
      ),
    )
);
$dark-red-theme: mat.define-dark-theme(
    (
      color: (
        primary: $mat-dark-red-palette,
        accent: $mat-dark-primary-palette,
      ),
    )
);
$dark-blue-theme: mat.define-dark-theme(
    (
      color: (
        primary: $mat-dark-blue-palette,
        accent: $mat-dark-primary-palette,
        warn: $mat-dark-red-palette,
      ),
    )
);
$dark-violet-theme: mat.define-dark-theme(
    (
      color: (
        primary: $mat-dark-violet-palette,
        accent: $mat-dark-primary-palette,
        warn: $mat-dark-red-palette,
      ),
    )
);
$dark-pink-theme: mat.define-dark-theme(
    (
      color: (
        primary: $mat-dark-pink-palette,
        accent: $mat-dark-primary-palette,
        warn: $mat-dark-red-palette,
      ),
    )
);


  @include mat.all-component-themes($default-theme);
  @include tile.theme($default-theme);
  @include main-page.theme($default-theme);
  .green-theme {
    @include mat.all-component-colors($light-green-theme);
    @include tile.color($light-green-theme);
  }

  .yellow-theme {
    @include mat.all-component-colors($light-yellow-theme);
    @include tile.color($light-yellow-theme);
  }

  .orange-theme {
    @include mat.all-component-colors($light-orange-theme);
    @include tile.color($light-orange-theme);
  }

  .red-theme {
    @include mat.all-component-colors($light-red-theme);
    @include tile.color($light-red-theme);
  }

  .blue-theme {
    @include mat.all-component-colors($light-blue-theme);
    @include tile.color($light-blue-theme);
  }

  .violet-theme {
    @include mat.all-component-colors($light-violet-theme);
    @include tile.color($light-violet-theme);
    @include sidebar.color($light-violet-theme);
  }

  .pink-theme {
    @include mat.all-component-colors($light-pink-theme);
    @include tile.color($light-pink-theme);
    @include main-page.color($light-pink-theme);
  }



.dark-mode {
  @include mat.all-component-colors($default-dark-theme);
  @include tile.color($default-dark-theme);
  @include main-page.color($default-dark-theme);
  .green-theme {
    @include mat.all-component-colors($dark-green-theme);
    @include tile.color($dark-green-theme);
  }

  .yellow-theme {
    @include mat.all-component-colors($dark-yellow-theme);
    @include tile.color($dark-yellow-theme);
  }

  .orange-theme {
    @include mat.all-component-colors($dark-orange-theme);
    @include tile.color($dark-orange-theme);
  }

  .red-theme {
    @include mat.all-component-colors($dark-red-theme);
    @include tile.color($dark-red-theme);
  }

  .blue-theme {
    @include mat.all-component-colors($dark-blue-theme);
    @include tile.color($dark-blue-theme);
  }

  .violet-theme {
    @include mat.all-component-colors($dark-violet-theme);
    @include tile.color($dark-violet-theme);
    @include sidebar.color($dark-violet-theme);
  }

  .pink-theme {
    @include mat.all-component-colors($dark-pink-theme);
    @include tile.color($dark-pink-theme);
    @include main-page.color($dark-pink-theme);
  }
}

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.

